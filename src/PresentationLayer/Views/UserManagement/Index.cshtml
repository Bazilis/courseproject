@using DAL.Entities
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<div class="text-center">
    <h1 class="display-6">@User.Identity?.Name, you can block, unblock or delete selected users</h1>
    <form id="management" method="post">
        <div class="btn-toolbar" role="toolbar">
            <div class="btn-group" role="group">
                <button type="submit" formaction="@Url.Action("UnblockUsers", "UserManagement")" class="btn btn-outline-success" data-bs-toggle="tooltip" title="Unblock selected user(s)">
                    Unblock
                </button>
            </div>
            <div class="btn-group" role="group">
                <button type="submit" formaction="@Url.Action("BlockUsers", "UserManagement")" class="btn btn-outline-danger" data-bs-toggle="tooltip" title="Block selected user(s)">
                    Block
                </button>
            </div>
            <div class="btn-group" role="group">
                <button type="submit" formaction="@Url.Action("DeleteUsers", "UserManagement")" class="btn btn-outline-danger" data-bs-toggle="tooltip" title="Delete selected user(s)">
                    Delete
                </button>
            </div>
            <div class="btn-group" role="group">
                <button type="submit" formaction="@Url.Action("AddUsersToRoleAdmin", "UserManagement")" class="btn btn-outline-success" data-bs-toggle="tooltip" title="Add selected user(s) to Admin role">
                    Add to Admin role
                </button>
            </div>
            <div class="btn-group" role="group">
                <button type="submit" formaction="@Url.Action("RemoveUsersFromRoleAdmin", "UserManagement")" class="btn btn-outline-danger" data-bs-toggle="tooltip" title="Remove selected user(s) from Admin role">
                    Remove from Admin role
                </button>
            </div>
            <div class="btn-group" role="group">
                <button type="submit" formaction="@Url.Action("AddUsersToRoleUser", "UserManagement")" class="btn btn-outline-success" data-bs-toggle="tooltip" title="Add selected user(s) to User role">
                    Add to User role
                </button>
            </div>
            <div class="btn-group" role="group">
                <button type="submit" formaction="@Url.Action("RemoveUsersFromRoleUser", "UserManagement")" class="btn btn-outline-success" data-bs-toggle="tooltip" title="Remove selected user(s) from User role">
                    Remove from User role
                </button>
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th scope="col">
                        <input name="allUsers" class="form-check-input" type="checkbox" onClick="toggle(this)" data-bs-toggle="tooltip" title="Select All">
                    </th>
                    <th scope="col">Id</th>
                    <th scope="col">Name</th>
                    <th scope="col">Email</th>
                    <th scope="col">Role</th>
                    <th scope="col">Status (active/blocked)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var applicationUser in @UserManager.Users)
                {
                    <tr>
                        <th scope="col">
                            <input name="usersNames" class="form-check-input" type="checkbox" value="@applicationUser.UserName">
                        </th>
                        <td>@applicationUser.Id</td>
                        <td>@applicationUser.UserName</td>
                        <td>@applicationUser.Email</td>
                        @{
                            var listOfRoles = await UserManager.GetRolesAsync(applicationUser);
                            <td>
                            @foreach (var role in listOfRoles)
                            {
                                if (role == listOfRoles.Last())
                                {
                                    <span>@role</span>
                                }
                                else
                                {
                                    <span>@role,</span>
                                }
                            }
                            </td>
                        }
                        @if (applicationUser.IsBlocked)
                        {
                            <td>Blocked</td>
                        }
                        else
                        {
                            <td>Active</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </form>
</div>
<script language="JavaScript">
    function toggle(source) {
        checkboxes = document.getElementsByName('usersNames');
        for (var i = 0, n = checkboxes.length; i < n; i++) {
            checkboxes[i].checked = source.checked;
        }
    }
</script>
