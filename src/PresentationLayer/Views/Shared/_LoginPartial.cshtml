@using DAL.Entities
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <p class="nav-link text-dark">Hi @User.Identity?.Name!</p>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Home" asp-action="Index" title="Home page">Home page</a>
    </li>
    if(User.IsInRole("Admin"))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="UserManagement" asp-action="Index" title="Admin page">Admin page</a>
        </li>
    }
    var user = await UserManager.FindByNameAsync(User.Identity?.Name);
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Home" asp-action="ManageCollections" asp-route-userid="@user.Id" title="MyCollections">Manage collections</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="My account">Manage account</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
